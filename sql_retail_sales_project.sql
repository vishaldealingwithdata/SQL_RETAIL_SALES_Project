                                        -- SQL RETAIL SALES ANALYSIS - P1
CREATE DATABASE SQL_SALES_PROJECT1;
USE SQL_SALES_PROJECT1;

-- CREATE TABLE

CREATE TABLE RETAIL_SALES (
transactions_id INT PRIMARY KEY,
sale_date DATE,
sale_time TIME,
customer_id INT,
gender varchar(15),
age INT,
category VARCHAR(15),
quantity INT,
price_per_unit FLOAT,
cogs FLOAT,
total_sale FLOAT
);

SELECT * FROM RETAIL_SALES;

                                                 -- Checking NULL Values

SELECT * FROM RETAIL_SALES
WHERE 
TRANSACTIONS_ID IS NULL
OR
SALE_DATE IS NULL
OR
SALE_TIME IS NULL
OR
CUSTOMER_ID IS NULL
OR
GENDER IS NULL
OR
AGE IS NULL
OR
CATEGORY IS NULL
OR
QUANTITY IS NULL
OR
PRICE_PER_UNIT IS NULL
OR
COGS IS NULL
OR
TOTAL_SALE IS NULL;

                                                  -- DATA EXPLORATION
-- WHAT TOTAL SALES DO WE HAVE?
SELECT COUNT(TRANSACTIONS_ID) AS TOTAL_SALES
FROM RETAIL_SALES;

-- HOW MANY UNIQUE CUSTOMERS DO WE HAVE?
SELECT COUNT(DISTINCT CUSTOMER_ID) AS TOTAL_CUSTOMERS
FROM RETAIL_SALES;

										 -- DATA ANALYSIS AND BUSINESS KEY PROBLEMS
-- WHAT IS THE TOTAL REVENUE GENERATED FROM ALL RETAIL SALES?
SELECT SUM(TOTAL_SALE) AS TOTAL_REVENUE 
FROM 
RETAIL_SALES;

-- WHICH ARE THE TOP 2 PRODUCT CATEGORIES BASED ON TOTAL SALES AMOUNT?
SELECT CATEGORY, SUM(TOTAL_SALE) AS TOTAL_PROFIT FROM RETAIL_SALES
GROUP BY CATEGORY
ORDER BY TOTAL_PROFIT DESC LIMIT 2;

-- HOW DOES THE DAILY SALES TREND LOOK OVER TIME?
SELECT SALE_DATE, SUM(TOTAL_SALE) AS DAILY_SALES
FROM RETAIL_SALES
GROUP BY SALE_DATE
ORDER BY SALE_DATE;

-- WHAT IS THE AVERAGE NUMBER OF ITEMS SOLD PER TRANSACTION (AVERAGE BASKET SIZE)?
SELECT AVG(QUANTITY) AS AVERAGE_BASKET_SIZE
FROM RETAIL_SALES;

-- HOW IS THE CUSTOMER BASE DISTRIBUTED BY GENDER?
SELECT GENDER, COUNT(DISTINCT CUSTOMER_ID) AS TOTAL_CUST
FROM RETAIL_SALES
GROUP BY GENDER;

-- WHICH AGE PERSON SPENDS THE MOST ON AVERAGE PER TRANSACTION?
SELECT AGE, AVG(TOTAL_SALE)
FROM RETAIL_SALES
GROUP BY AGE
ORDER BY AVG(TOTAL_SALE) DESC;

-- LIST THE QUANTITY AND CUSTOMERS MAKING PURCHASES MORE THAN 3 TIMES?
SELECT CUSTOMER_ID, QUANTITY
FROM RETAIL_SALES
GROUP BY CUSTOMER_ID, QUANTITY
HAVING COUNT(*) > 3
ORDER BY QUANTITY DESC;

-- WHICH TIME OF DAY (MORNING, AFTERNOON, EVENING) GENERATES THE HIGHEST SALES?
SELECT 
  CASE
    WHEN SALE_TIME < '12:00:00' THEN 'MORNING'
    WHEN SALE_TIME < '17:00:00' THEN 'AFTERNOON'
    ELSE 'EVENING'
  END AS TIME_OF_DAY,
  SUM(TOTAL_SALE) AS TOTAL_SALES
FROM RETAIL_SALES
GROUP BY TIME_OF_DAY;

-- WHICH PRODUCT CATEGORY HAS THE HIGHEST TOTAL QUANTITY SOLD?
SELECT CATEGORY, SUM(QUANTITY)
FROM RETAIL_SALES
GROUP BY CATEGORY
ORDER BY SUM(QUANTITY) DESC LIMIT 1;

-- WHICH CUSTOMER CAN BE CONSIDERED FOR A LOYALTY PROGRAM BASED ON THEIR TOTAL SPENDING(MAX)?
SELECT DISTINCT CUSTOMER_ID, SUM(TOTAL_SALE)
FROM RETAIL_SALES
GROUP BY CUSTOMER_ID
ORDER BY SUM(TOTAL_SALE)
DESC LIMIT 1;